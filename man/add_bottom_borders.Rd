% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/add_bottom_borders.R
\name{add_bottom_borders}
\alias{add_bottom_borders}
\title{Adds bottom borders to a huxtable}
\usage{
add_bottom_borders(ht, border_matrix = no_borders(ht), transform_fns = list())
}
\arguments{
\item{ht}{\code{huxtable} A huxtable object}

\item{border_matrix}{(optional) \code{matrix} A matrix indicating where to add the bottom
borders.}

\item{transform_fns}{(optional) \code{list} of \code{function} A list of functions applied to the
\code{border_matrix}. The functions have to accept two arguments:
\enumerate{
\item The \code{huxtable}.
\item The \code{border_matrix}.
}

The function have to return a matrix with the same dimensions as \code{huxtable}
indicating where to put the borders. The functions in the list are applied
sequentially to \code{border_matrix}.}
}
\value{
A huxtable with added borders.
}
\description{
Adds bottom borders to a huxtable
}
\details{
Adds bottom borders to a huxtable based on
a matrix indicating where the borders should be put.

This function is responsible for adding bottom borders to a \code{huxtable} object.
It supports borders spanning multiple columns and borders that are under neighbouring,
single cells (or merged cells), but separate (see examples).

This feature has limitations. Mainly, it does not support both versions of the borders
(continuous and separate) on the same line. In such a case, the borders in the resulting
RTF look misaligned.

\code{border_matrix} details
You mark where the bottom borders should go in the table by passing a matrix.
The matrix has to have the same dimensions as the passed \code{huxtable}. Each cell
in \code{border_matrix} corresponds to a cell in \code{huxtable}

Table:\tabular{ll}{
   foo \tab bar \cr
   baz \tab bim \cr
}


A border matrix:\tabular{ll}{
   1 \tab 1 \cr
   0 \tab 0 \cr
}


The above border matrix puts a bottom border across the entire first row
and no borders in the second row.

A border matrix:\tabular{ll}{
   1 \tab 2 \cr
   0 \tab 0 \cr
}


The above border matrix puts one border under the first cell in the first row;
and another border (separate from the first one) under the second cell
in the first row. The second row stays without any borders.
}
\examples{
border_matrix <- matrix(c(1, 1, 2, 0, 1, 1, 0, 0, 0), nrow = 3, ncol = 3)
ht <- huxtable::as_huxtable(
  data.frame(a = c(1, 2, 3), b = c("a", "b", "c"), c = c(TRUE, FALSE, TRUE))
)
# By default adds no borders
add_bottom_borders(ht, border_matrix)
#'
# Adds spanning borders under cells with text in the second row
add_bottom_borders(ht, transform_fns = list(spanning_borders(2)))
# Adds spanning borders under cells with text in the second row and a border
# under a cell in row 3 and column 3
add_bottom_borders(ht, transform_fns = list(spanning_borders(2), single_border(3, 3)))

}
